/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SetRulesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetRulesRequest{}

// SetRulesRequest Custom filtering rules setting request.
type SetRulesRequest struct {
	Rules []string `json:"rules,omitempty"`
}

// NewSetRulesRequest instantiates a new SetRulesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetRulesRequest() *SetRulesRequest {
	this := SetRulesRequest{}
	return &this
}

// NewSetRulesRequestWithDefaults instantiates a new SetRulesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetRulesRequestWithDefaults() *SetRulesRequest {
	this := SetRulesRequest{}
	return &this
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *SetRulesRequest) GetRules() []string {
	if o == nil || IsNil(o.Rules) {
		var ret []string
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetRulesRequest) GetRulesOk() ([]string, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *SetRulesRequest) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given []string and assigns it to the Rules field.
func (o *SetRulesRequest) SetRules(v []string) {
	o.Rules = v
}

func (o SetRulesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetRulesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}
	return toSerialize, nil
}

type NullableSetRulesRequest struct {
	value *SetRulesRequest
	isSet bool
}

func (v NullableSetRulesRequest) Get() *SetRulesRequest {
	return v.value
}

func (v *NullableSetRulesRequest) Set(val *SetRulesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetRulesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetRulesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetRulesRequest(val *SetRulesRequest) *NullableSetRulesRequest {
	return &NullableSetRulesRequest{value: val, isSet: true}
}

func (v NullableSetRulesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetRulesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


