/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClientUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientUpdate{}

// ClientUpdate Client update request
type ClientUpdate struct {
	Name *string `json:"name,omitempty"`
	Data *Client `json:"data,omitempty"`
}

// NewClientUpdate instantiates a new ClientUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientUpdate() *ClientUpdate {
	this := ClientUpdate{}
	return &this
}

// NewClientUpdateWithDefaults instantiates a new ClientUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientUpdateWithDefaults() *ClientUpdate {
	this := ClientUpdate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClientUpdate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClientUpdate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClientUpdate) SetName(v string) {
	o.Name = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ClientUpdate) GetData() Client {
	if o == nil || IsNil(o.Data) {
		var ret Client
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetDataOk() (*Client, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ClientUpdate) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given Client and assigns it to the Data field.
func (o *ClientUpdate) SetData(v Client) {
	o.Data = &v
}

func (o ClientUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableClientUpdate struct {
	value *ClientUpdate
	isSet bool
}

func (v NullableClientUpdate) Get() *ClientUpdate {
	return v.value
}

func (v *NullableClientUpdate) Set(val *ClientUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableClientUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableClientUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientUpdate(val *ClientUpdate) *NullableClientUpdate {
	return &NullableClientUpdate{value: val, isSet: true}
}

func (v NullableClientUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


