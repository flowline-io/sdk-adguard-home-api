/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FilterCheckHostResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilterCheckHostResponse{}

// FilterCheckHostResponse Check Host Result
type FilterCheckHostResponse struct {
	// Request filtering status.
	Reason *string `json:"reason,omitempty"`
	// In case if there's a rule applied to this DNS request, this is ID of the filter list that the rule belongs to. Deprecated: use `rules[*].filter_list_id` instead. 
	// Deprecated
	FilterId *int32 `json:"filter_id,omitempty"`
	// Filtering rule applied to the request (if any). Deprecated: use `rules[*].text` instead. 
	// Deprecated
	Rule *string `json:"rule,omitempty"`
	// Applied rules.
	Rules []ResultRule `json:"rules,omitempty"`
	// Set if reason=FilteredBlockedService
	ServiceName *string `json:"service_name,omitempty"`
	// Set if reason=Rewrite
	Cname *string `json:"cname,omitempty"`
	// Set if reason=Rewrite
	IpAddrs []string `json:"ip_addrs,omitempty"`
}

// NewFilterCheckHostResponse instantiates a new FilterCheckHostResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilterCheckHostResponse() *FilterCheckHostResponse {
	this := FilterCheckHostResponse{}
	return &this
}

// NewFilterCheckHostResponseWithDefaults instantiates a new FilterCheckHostResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilterCheckHostResponseWithDefaults() *FilterCheckHostResponse {
	this := FilterCheckHostResponse{}
	return &this
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *FilterCheckHostResponse) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterCheckHostResponse) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *FilterCheckHostResponse) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *FilterCheckHostResponse) SetReason(v string) {
	o.Reason = &v
}

// GetFilterId returns the FilterId field value if set, zero value otherwise.
// Deprecated
func (o *FilterCheckHostResponse) GetFilterId() int32 {
	if o == nil || IsNil(o.FilterId) {
		var ret int32
		return ret
	}
	return *o.FilterId
}

// GetFilterIdOk returns a tuple with the FilterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *FilterCheckHostResponse) GetFilterIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FilterId) {
		return nil, false
	}
	return o.FilterId, true
}

// HasFilterId returns a boolean if a field has been set.
func (o *FilterCheckHostResponse) HasFilterId() bool {
	if o != nil && !IsNil(o.FilterId) {
		return true
	}

	return false
}

// SetFilterId gets a reference to the given int32 and assigns it to the FilterId field.
// Deprecated
func (o *FilterCheckHostResponse) SetFilterId(v int32) {
	o.FilterId = &v
}

// GetRule returns the Rule field value if set, zero value otherwise.
// Deprecated
func (o *FilterCheckHostResponse) GetRule() string {
	if o == nil || IsNil(o.Rule) {
		var ret string
		return ret
	}
	return *o.Rule
}

// GetRuleOk returns a tuple with the Rule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *FilterCheckHostResponse) GetRuleOk() (*string, bool) {
	if o == nil || IsNil(o.Rule) {
		return nil, false
	}
	return o.Rule, true
}

// HasRule returns a boolean if a field has been set.
func (o *FilterCheckHostResponse) HasRule() bool {
	if o != nil && !IsNil(o.Rule) {
		return true
	}

	return false
}

// SetRule gets a reference to the given string and assigns it to the Rule field.
// Deprecated
func (o *FilterCheckHostResponse) SetRule(v string) {
	o.Rule = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *FilterCheckHostResponse) GetRules() []ResultRule {
	if o == nil || IsNil(o.Rules) {
		var ret []ResultRule
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterCheckHostResponse) GetRulesOk() ([]ResultRule, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *FilterCheckHostResponse) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given []ResultRule and assigns it to the Rules field.
func (o *FilterCheckHostResponse) SetRules(v []ResultRule) {
	o.Rules = v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *FilterCheckHostResponse) GetServiceName() string {
	if o == nil || IsNil(o.ServiceName) {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterCheckHostResponse) GetServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceName) {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *FilterCheckHostResponse) HasServiceName() bool {
	if o != nil && !IsNil(o.ServiceName) {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *FilterCheckHostResponse) SetServiceName(v string) {
	o.ServiceName = &v
}

// GetCname returns the Cname field value if set, zero value otherwise.
func (o *FilterCheckHostResponse) GetCname() string {
	if o == nil || IsNil(o.Cname) {
		var ret string
		return ret
	}
	return *o.Cname
}

// GetCnameOk returns a tuple with the Cname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterCheckHostResponse) GetCnameOk() (*string, bool) {
	if o == nil || IsNil(o.Cname) {
		return nil, false
	}
	return o.Cname, true
}

// HasCname returns a boolean if a field has been set.
func (o *FilterCheckHostResponse) HasCname() bool {
	if o != nil && !IsNil(o.Cname) {
		return true
	}

	return false
}

// SetCname gets a reference to the given string and assigns it to the Cname field.
func (o *FilterCheckHostResponse) SetCname(v string) {
	o.Cname = &v
}

// GetIpAddrs returns the IpAddrs field value if set, zero value otherwise.
func (o *FilterCheckHostResponse) GetIpAddrs() []string {
	if o == nil || IsNil(o.IpAddrs) {
		var ret []string
		return ret
	}
	return o.IpAddrs
}

// GetIpAddrsOk returns a tuple with the IpAddrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterCheckHostResponse) GetIpAddrsOk() ([]string, bool) {
	if o == nil || IsNil(o.IpAddrs) {
		return nil, false
	}
	return o.IpAddrs, true
}

// HasIpAddrs returns a boolean if a field has been set.
func (o *FilterCheckHostResponse) HasIpAddrs() bool {
	if o != nil && !IsNil(o.IpAddrs) {
		return true
	}

	return false
}

// SetIpAddrs gets a reference to the given []string and assigns it to the IpAddrs field.
func (o *FilterCheckHostResponse) SetIpAddrs(v []string) {
	o.IpAddrs = v
}

func (o FilterCheckHostResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilterCheckHostResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.FilterId) {
		toSerialize["filter_id"] = o.FilterId
	}
	if !IsNil(o.Rule) {
		toSerialize["rule"] = o.Rule
	}
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}
	if !IsNil(o.ServiceName) {
		toSerialize["service_name"] = o.ServiceName
	}
	if !IsNil(o.Cname) {
		toSerialize["cname"] = o.Cname
	}
	if !IsNil(o.IpAddrs) {
		toSerialize["ip_addrs"] = o.IpAddrs
	}
	return toSerialize, nil
}

type NullableFilterCheckHostResponse struct {
	value *FilterCheckHostResponse
	isSet bool
}

func (v NullableFilterCheckHostResponse) Get() *FilterCheckHostResponse {
	return v.value
}

func (v *NullableFilterCheckHostResponse) Set(val *FilterCheckHostResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFilterCheckHostResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFilterCheckHostResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilterCheckHostResponse(val *FilterCheckHostResponse) *NullableFilterCheckHostResponse {
	return &NullableFilterCheckHostResponse{value: val, isSet: true}
}

func (v NullableFilterCheckHostResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilterCheckHostResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


