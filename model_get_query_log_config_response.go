/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetQueryLogConfigResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetQueryLogConfigResponse{}

// GetQueryLogConfigResponse Query log configuration
type GetQueryLogConfigResponse struct {
	// Is query log enabled
	Enabled bool `json:"enabled"`
	// Time period for query log rotation in milliseconds. 
	Interval float32 `json:"interval"`
	// Anonymize clients' IP addresses
	AnonymizeClientIp bool `json:"anonymize_client_ip"`
	// List of host names, which should not be written to log
	Ignored []string `json:"ignored"`
}

type _GetQueryLogConfigResponse GetQueryLogConfigResponse

// NewGetQueryLogConfigResponse instantiates a new GetQueryLogConfigResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetQueryLogConfigResponse(enabled bool, interval float32, anonymizeClientIp bool, ignored []string) *GetQueryLogConfigResponse {
	this := GetQueryLogConfigResponse{}
	this.Enabled = enabled
	this.Interval = interval
	this.AnonymizeClientIp = anonymizeClientIp
	this.Ignored = ignored
	return &this
}

// NewGetQueryLogConfigResponseWithDefaults instantiates a new GetQueryLogConfigResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetQueryLogConfigResponseWithDefaults() *GetQueryLogConfigResponse {
	this := GetQueryLogConfigResponse{}
	return &this
}

// GetEnabled returns the Enabled field value
func (o *GetQueryLogConfigResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *GetQueryLogConfigResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *GetQueryLogConfigResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetInterval returns the Interval field value
func (o *GetQueryLogConfigResponse) GetInterval() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value
// and a boolean to check if the value has been set.
func (o *GetQueryLogConfigResponse) GetIntervalOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Interval, true
}

// SetInterval sets field value
func (o *GetQueryLogConfigResponse) SetInterval(v float32) {
	o.Interval = v
}

// GetAnonymizeClientIp returns the AnonymizeClientIp field value
func (o *GetQueryLogConfigResponse) GetAnonymizeClientIp() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AnonymizeClientIp
}

// GetAnonymizeClientIpOk returns a tuple with the AnonymizeClientIp field value
// and a boolean to check if the value has been set.
func (o *GetQueryLogConfigResponse) GetAnonymizeClientIpOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnonymizeClientIp, true
}

// SetAnonymizeClientIp sets field value
func (o *GetQueryLogConfigResponse) SetAnonymizeClientIp(v bool) {
	o.AnonymizeClientIp = v
}

// GetIgnored returns the Ignored field value
func (o *GetQueryLogConfigResponse) GetIgnored() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Ignored
}

// GetIgnoredOk returns a tuple with the Ignored field value
// and a boolean to check if the value has been set.
func (o *GetQueryLogConfigResponse) GetIgnoredOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ignored, true
}

// SetIgnored sets field value
func (o *GetQueryLogConfigResponse) SetIgnored(v []string) {
	o.Ignored = v
}

func (o GetQueryLogConfigResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetQueryLogConfigResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enabled"] = o.Enabled
	toSerialize["interval"] = o.Interval
	toSerialize["anonymize_client_ip"] = o.AnonymizeClientIp
	toSerialize["ignored"] = o.Ignored
	return toSerialize, nil
}

func (o *GetQueryLogConfigResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"enabled",
		"interval",
		"anonymize_client_ip",
		"ignored",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetQueryLogConfigResponse := _GetQueryLogConfigResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetQueryLogConfigResponse)

	if err != nil {
		return err
	}

	*o = GetQueryLogConfigResponse(varGetQueryLogConfigResponse)

	return err
}

type NullableGetQueryLogConfigResponse struct {
	value *GetQueryLogConfigResponse
	isSet bool
}

func (v NullableGetQueryLogConfigResponse) Get() *GetQueryLogConfigResponse {
	return v.value
}

func (v *NullableGetQueryLogConfigResponse) Set(val *GetQueryLogConfigResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetQueryLogConfigResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetQueryLogConfigResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetQueryLogConfigResponse(val *GetQueryLogConfigResponse) *NullableGetQueryLogConfigResponse {
	return &NullableGetQueryLogConfigResponse{value: val, isSet: true}
}

func (v NullableGetQueryLogConfigResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetQueryLogConfigResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


