/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ParentalStatus200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParentalStatus200Response{}

// ParentalStatus200Response struct for ParentalStatus200Response
type ParentalStatus200Response struct {
	Enable *bool `json:"enable,omitempty"`
	Sensitivity *int32 `json:"sensitivity,omitempty"`
}

// NewParentalStatus200Response instantiates a new ParentalStatus200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParentalStatus200Response() *ParentalStatus200Response {
	this := ParentalStatus200Response{}
	return &this
}

// NewParentalStatus200ResponseWithDefaults instantiates a new ParentalStatus200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParentalStatus200ResponseWithDefaults() *ParentalStatus200Response {
	this := ParentalStatus200Response{}
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *ParentalStatus200Response) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParentalStatus200Response) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *ParentalStatus200Response) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *ParentalStatus200Response) SetEnable(v bool) {
	o.Enable = &v
}

// GetSensitivity returns the Sensitivity field value if set, zero value otherwise.
func (o *ParentalStatus200Response) GetSensitivity() int32 {
	if o == nil || IsNil(o.Sensitivity) {
		var ret int32
		return ret
	}
	return *o.Sensitivity
}

// GetSensitivityOk returns a tuple with the Sensitivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParentalStatus200Response) GetSensitivityOk() (*int32, bool) {
	if o == nil || IsNil(o.Sensitivity) {
		return nil, false
	}
	return o.Sensitivity, true
}

// HasSensitivity returns a boolean if a field has been set.
func (o *ParentalStatus200Response) HasSensitivity() bool {
	if o != nil && !IsNil(o.Sensitivity) {
		return true
	}

	return false
}

// SetSensitivity gets a reference to the given int32 and assigns it to the Sensitivity field.
func (o *ParentalStatus200Response) SetSensitivity(v int32) {
	o.Sensitivity = &v
}

func (o ParentalStatus200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParentalStatus200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.Sensitivity) {
		toSerialize["sensitivity"] = o.Sensitivity
	}
	return toSerialize, nil
}

type NullableParentalStatus200Response struct {
	value *ParentalStatus200Response
	isSet bool
}

func (v NullableParentalStatus200Response) Get() *ParentalStatus200Response {
	return v.value
}

func (v *NullableParentalStatus200Response) Set(val *ParentalStatus200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableParentalStatus200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableParentalStatus200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParentalStatus200Response(val *ParentalStatus200Response) *NullableParentalStatus200Response {
	return &NullableParentalStatus200Response{value: val, isSet: true}
}

func (v NullableParentalStatus200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParentalStatus200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


