/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DhcpSearchResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DhcpSearchResult{}

// DhcpSearchResult Information about a DHCP server discovered in the current network. 
type DhcpSearchResult struct {
	V4 *DhcpSearchV4 `json:"v4,omitempty"`
	V6 *DhcpSearchV6 `json:"v6,omitempty"`
}

// NewDhcpSearchResult instantiates a new DhcpSearchResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDhcpSearchResult() *DhcpSearchResult {
	this := DhcpSearchResult{}
	return &this
}

// NewDhcpSearchResultWithDefaults instantiates a new DhcpSearchResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDhcpSearchResultWithDefaults() *DhcpSearchResult {
	this := DhcpSearchResult{}
	return &this
}

// GetV4 returns the V4 field value if set, zero value otherwise.
func (o *DhcpSearchResult) GetV4() DhcpSearchV4 {
	if o == nil || IsNil(o.V4) {
		var ret DhcpSearchV4
		return ret
	}
	return *o.V4
}

// GetV4Ok returns a tuple with the V4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpSearchResult) GetV4Ok() (*DhcpSearchV4, bool) {
	if o == nil || IsNil(o.V4) {
		return nil, false
	}
	return o.V4, true
}

// HasV4 returns a boolean if a field has been set.
func (o *DhcpSearchResult) HasV4() bool {
	if o != nil && !IsNil(o.V4) {
		return true
	}

	return false
}

// SetV4 gets a reference to the given DhcpSearchV4 and assigns it to the V4 field.
func (o *DhcpSearchResult) SetV4(v DhcpSearchV4) {
	o.V4 = &v
}

// GetV6 returns the V6 field value if set, zero value otherwise.
func (o *DhcpSearchResult) GetV6() DhcpSearchV6 {
	if o == nil || IsNil(o.V6) {
		var ret DhcpSearchV6
		return ret
	}
	return *o.V6
}

// GetV6Ok returns a tuple with the V6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpSearchResult) GetV6Ok() (*DhcpSearchV6, bool) {
	if o == nil || IsNil(o.V6) {
		return nil, false
	}
	return o.V6, true
}

// HasV6 returns a boolean if a field has been set.
func (o *DhcpSearchResult) HasV6() bool {
	if o != nil && !IsNil(o.V6) {
		return true
	}

	return false
}

// SetV6 gets a reference to the given DhcpSearchV6 and assigns it to the V6 field.
func (o *DhcpSearchResult) SetV6(v DhcpSearchV6) {
	o.V6 = &v
}

func (o DhcpSearchResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DhcpSearchResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.V4) {
		toSerialize["v4"] = o.V4
	}
	if !IsNil(o.V6) {
		toSerialize["v6"] = o.V6
	}
	return toSerialize, nil
}

type NullableDhcpSearchResult struct {
	value *DhcpSearchResult
	isSet bool
}

func (v NullableDhcpSearchResult) Get() *DhcpSearchResult {
	return v.value
}

func (v *NullableDhcpSearchResult) Set(val *DhcpSearchResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDhcpSearchResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDhcpSearchResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDhcpSearchResult(val *DhcpSearchResult) *NullableDhcpSearchResult {
	return &NullableDhcpSearchResult{value: val, isSet: true}
}

func (v NullableDhcpSearchResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDhcpSearchResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


