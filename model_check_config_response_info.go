/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CheckConfigResponseInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckConfigResponseInfo{}

// CheckConfigResponseInfo struct for CheckConfigResponseInfo
type CheckConfigResponseInfo struct {
	Status string `json:"status"`
	CanAutofix bool `json:"can_autofix"`
}

type _CheckConfigResponseInfo CheckConfigResponseInfo

// NewCheckConfigResponseInfo instantiates a new CheckConfigResponseInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckConfigResponseInfo(status string, canAutofix bool) *CheckConfigResponseInfo {
	this := CheckConfigResponseInfo{}
	this.Status = status
	this.CanAutofix = canAutofix
	return &this
}

// NewCheckConfigResponseInfoWithDefaults instantiates a new CheckConfigResponseInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckConfigResponseInfoWithDefaults() *CheckConfigResponseInfo {
	this := CheckConfigResponseInfo{}
	var status string = ""
	this.Status = status
	return &this
}

// GetStatus returns the Status field value
func (o *CheckConfigResponseInfo) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CheckConfigResponseInfo) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CheckConfigResponseInfo) SetStatus(v string) {
	o.Status = v
}

// GetCanAutofix returns the CanAutofix field value
func (o *CheckConfigResponseInfo) GetCanAutofix() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CanAutofix
}

// GetCanAutofixOk returns a tuple with the CanAutofix field value
// and a boolean to check if the value has been set.
func (o *CheckConfigResponseInfo) GetCanAutofixOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CanAutofix, true
}

// SetCanAutofix sets field value
func (o *CheckConfigResponseInfo) SetCanAutofix(v bool) {
	o.CanAutofix = v
}

func (o CheckConfigResponseInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckConfigResponseInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	toSerialize["can_autofix"] = o.CanAutofix
	return toSerialize, nil
}

func (o *CheckConfigResponseInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
		"can_autofix",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCheckConfigResponseInfo := _CheckConfigResponseInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCheckConfigResponseInfo)

	if err != nil {
		return err
	}

	*o = CheckConfigResponseInfo(varCheckConfigResponseInfo)

	return err
}

type NullableCheckConfigResponseInfo struct {
	value *CheckConfigResponseInfo
	isSet bool
}

func (v NullableCheckConfigResponseInfo) Get() *CheckConfigResponseInfo {
	return v.value
}

func (v *NullableCheckConfigResponseInfo) Set(val *CheckConfigResponseInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckConfigResponseInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckConfigResponseInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckConfigResponseInfo(val *CheckConfigResponseInfo) *NullableCheckConfigResponseInfo {
	return &NullableCheckConfigResponseInfo{value: val, isSet: true}
}

func (v NullableCheckConfigResponseInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckConfigResponseInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


