/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BlockedServicesSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockedServicesSchedule{}

// BlockedServicesSchedule struct for BlockedServicesSchedule
type BlockedServicesSchedule struct {
	Schedule *Schedule `json:"schedule,omitempty"`
	// The names of the blocked services. 
	Ids []string `json:"ids,omitempty"`
}

// NewBlockedServicesSchedule instantiates a new BlockedServicesSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockedServicesSchedule() *BlockedServicesSchedule {
	this := BlockedServicesSchedule{}
	return &this
}

// NewBlockedServicesScheduleWithDefaults instantiates a new BlockedServicesSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockedServicesScheduleWithDefaults() *BlockedServicesSchedule {
	this := BlockedServicesSchedule{}
	return &this
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *BlockedServicesSchedule) GetSchedule() Schedule {
	if o == nil || IsNil(o.Schedule) {
		var ret Schedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockedServicesSchedule) GetScheduleOk() (*Schedule, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *BlockedServicesSchedule) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given Schedule and assigns it to the Schedule field.
func (o *BlockedServicesSchedule) SetSchedule(v Schedule) {
	o.Schedule = &v
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *BlockedServicesSchedule) GetIds() []string {
	if o == nil || IsNil(o.Ids) {
		var ret []string
		return ret
	}
	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockedServicesSchedule) GetIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.Ids) {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *BlockedServicesSchedule) HasIds() bool {
	if o != nil && !IsNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given []string and assigns it to the Ids field.
func (o *BlockedServicesSchedule) SetIds(v []string) {
	o.Ids = v
}

func (o BlockedServicesSchedule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockedServicesSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.Ids) {
		toSerialize["ids"] = o.Ids
	}
	return toSerialize, nil
}

type NullableBlockedServicesSchedule struct {
	value *BlockedServicesSchedule
	isSet bool
}

func (v NullableBlockedServicesSchedule) Get() *BlockedServicesSchedule {
	return v.value
}

func (v *NullableBlockedServicesSchedule) Set(val *BlockedServicesSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockedServicesSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockedServicesSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockedServicesSchedule(val *BlockedServicesSchedule) *NullableBlockedServicesSchedule {
	return &NullableBlockedServicesSchedule{value: val, isSet: true}
}

func (v NullableBlockedServicesSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockedServicesSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


