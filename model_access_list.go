/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AccessList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessList{}

// AccessList Client and host access list.  Each of the lists should contain only unique elements.  In addition, allowed and disallowed lists cannot contain the same elements. 
type AccessList struct {
	// The allowlist of clients: IP addresses, CIDRs, or ClientIDs. 
	AllowedClients []string `json:"allowed_clients,omitempty"`
	// The blocklist of clients: IP addresses, CIDRs, or ClientIDs. 
	DisallowedClients []string `json:"disallowed_clients,omitempty"`
	// The blocklist of hosts.
	BlockedHosts []string `json:"blocked_hosts,omitempty"`
}

// NewAccessList instantiates a new AccessList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessList() *AccessList {
	this := AccessList{}
	return &this
}

// NewAccessListWithDefaults instantiates a new AccessList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessListWithDefaults() *AccessList {
	this := AccessList{}
	return &this
}

// GetAllowedClients returns the AllowedClients field value if set, zero value otherwise.
func (o *AccessList) GetAllowedClients() []string {
	if o == nil || IsNil(o.AllowedClients) {
		var ret []string
		return ret
	}
	return o.AllowedClients
}

// GetAllowedClientsOk returns a tuple with the AllowedClients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessList) GetAllowedClientsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedClients) {
		return nil, false
	}
	return o.AllowedClients, true
}

// HasAllowedClients returns a boolean if a field has been set.
func (o *AccessList) HasAllowedClients() bool {
	if o != nil && !IsNil(o.AllowedClients) {
		return true
	}

	return false
}

// SetAllowedClients gets a reference to the given []string and assigns it to the AllowedClients field.
func (o *AccessList) SetAllowedClients(v []string) {
	o.AllowedClients = v
}

// GetDisallowedClients returns the DisallowedClients field value if set, zero value otherwise.
func (o *AccessList) GetDisallowedClients() []string {
	if o == nil || IsNil(o.DisallowedClients) {
		var ret []string
		return ret
	}
	return o.DisallowedClients
}

// GetDisallowedClientsOk returns a tuple with the DisallowedClients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessList) GetDisallowedClientsOk() ([]string, bool) {
	if o == nil || IsNil(o.DisallowedClients) {
		return nil, false
	}
	return o.DisallowedClients, true
}

// HasDisallowedClients returns a boolean if a field has been set.
func (o *AccessList) HasDisallowedClients() bool {
	if o != nil && !IsNil(o.DisallowedClients) {
		return true
	}

	return false
}

// SetDisallowedClients gets a reference to the given []string and assigns it to the DisallowedClients field.
func (o *AccessList) SetDisallowedClients(v []string) {
	o.DisallowedClients = v
}

// GetBlockedHosts returns the BlockedHosts field value if set, zero value otherwise.
func (o *AccessList) GetBlockedHosts() []string {
	if o == nil || IsNil(o.BlockedHosts) {
		var ret []string
		return ret
	}
	return o.BlockedHosts
}

// GetBlockedHostsOk returns a tuple with the BlockedHosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessList) GetBlockedHostsOk() ([]string, bool) {
	if o == nil || IsNil(o.BlockedHosts) {
		return nil, false
	}
	return o.BlockedHosts, true
}

// HasBlockedHosts returns a boolean if a field has been set.
func (o *AccessList) HasBlockedHosts() bool {
	if o != nil && !IsNil(o.BlockedHosts) {
		return true
	}

	return false
}

// SetBlockedHosts gets a reference to the given []string and assigns it to the BlockedHosts field.
func (o *AccessList) SetBlockedHosts(v []string) {
	o.BlockedHosts = v
}

func (o AccessList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowedClients) {
		toSerialize["allowed_clients"] = o.AllowedClients
	}
	if !IsNil(o.DisallowedClients) {
		toSerialize["disallowed_clients"] = o.DisallowedClients
	}
	if !IsNil(o.BlockedHosts) {
		toSerialize["blocked_hosts"] = o.BlockedHosts
	}
	return toSerialize, nil
}

type NullableAccessList struct {
	value *AccessList
	isSet bool
}

func (v NullableAccessList) Get() *AccessList {
	return v.value
}

func (v *NullableAccessList) Set(val *AccessList) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessList) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessList(val *AccessList) *NullableAccessList {
	return &NullableAccessList{value: val, isSet: true}
}

func (v NullableAccessList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


