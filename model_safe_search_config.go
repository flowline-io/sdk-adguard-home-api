/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SafeSearchConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SafeSearchConfig{}

// SafeSearchConfig Safe search settings.
type SafeSearchConfig struct {
	Enabled *bool `json:"enabled,omitempty"`
	Bing *bool `json:"bing,omitempty"`
	Duckduckgo *bool `json:"duckduckgo,omitempty"`
	Ecosia *bool `json:"ecosia,omitempty"`
	Google *bool `json:"google,omitempty"`
	Pixabay *bool `json:"pixabay,omitempty"`
	Yandex *bool `json:"yandex,omitempty"`
	Youtube *bool `json:"youtube,omitempty"`
}

// NewSafeSearchConfig instantiates a new SafeSearchConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSafeSearchConfig() *SafeSearchConfig {
	this := SafeSearchConfig{}
	return &this
}

// NewSafeSearchConfigWithDefaults instantiates a new SafeSearchConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSafeSearchConfigWithDefaults() *SafeSearchConfig {
	this := SafeSearchConfig{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *SafeSearchConfig) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeSearchConfig) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *SafeSearchConfig) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *SafeSearchConfig) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetBing returns the Bing field value if set, zero value otherwise.
func (o *SafeSearchConfig) GetBing() bool {
	if o == nil || IsNil(o.Bing) {
		var ret bool
		return ret
	}
	return *o.Bing
}

// GetBingOk returns a tuple with the Bing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeSearchConfig) GetBingOk() (*bool, bool) {
	if o == nil || IsNil(o.Bing) {
		return nil, false
	}
	return o.Bing, true
}

// HasBing returns a boolean if a field has been set.
func (o *SafeSearchConfig) HasBing() bool {
	if o != nil && !IsNil(o.Bing) {
		return true
	}

	return false
}

// SetBing gets a reference to the given bool and assigns it to the Bing field.
func (o *SafeSearchConfig) SetBing(v bool) {
	o.Bing = &v
}

// GetDuckduckgo returns the Duckduckgo field value if set, zero value otherwise.
func (o *SafeSearchConfig) GetDuckduckgo() bool {
	if o == nil || IsNil(o.Duckduckgo) {
		var ret bool
		return ret
	}
	return *o.Duckduckgo
}

// GetDuckduckgoOk returns a tuple with the Duckduckgo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeSearchConfig) GetDuckduckgoOk() (*bool, bool) {
	if o == nil || IsNil(o.Duckduckgo) {
		return nil, false
	}
	return o.Duckduckgo, true
}

// HasDuckduckgo returns a boolean if a field has been set.
func (o *SafeSearchConfig) HasDuckduckgo() bool {
	if o != nil && !IsNil(o.Duckduckgo) {
		return true
	}

	return false
}

// SetDuckduckgo gets a reference to the given bool and assigns it to the Duckduckgo field.
func (o *SafeSearchConfig) SetDuckduckgo(v bool) {
	o.Duckduckgo = &v
}

// GetEcosia returns the Ecosia field value if set, zero value otherwise.
func (o *SafeSearchConfig) GetEcosia() bool {
	if o == nil || IsNil(o.Ecosia) {
		var ret bool
		return ret
	}
	return *o.Ecosia
}

// GetEcosiaOk returns a tuple with the Ecosia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeSearchConfig) GetEcosiaOk() (*bool, bool) {
	if o == nil || IsNil(o.Ecosia) {
		return nil, false
	}
	return o.Ecosia, true
}

// HasEcosia returns a boolean if a field has been set.
func (o *SafeSearchConfig) HasEcosia() bool {
	if o != nil && !IsNil(o.Ecosia) {
		return true
	}

	return false
}

// SetEcosia gets a reference to the given bool and assigns it to the Ecosia field.
func (o *SafeSearchConfig) SetEcosia(v bool) {
	o.Ecosia = &v
}

// GetGoogle returns the Google field value if set, zero value otherwise.
func (o *SafeSearchConfig) GetGoogle() bool {
	if o == nil || IsNil(o.Google) {
		var ret bool
		return ret
	}
	return *o.Google
}

// GetGoogleOk returns a tuple with the Google field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeSearchConfig) GetGoogleOk() (*bool, bool) {
	if o == nil || IsNil(o.Google) {
		return nil, false
	}
	return o.Google, true
}

// HasGoogle returns a boolean if a field has been set.
func (o *SafeSearchConfig) HasGoogle() bool {
	if o != nil && !IsNil(o.Google) {
		return true
	}

	return false
}

// SetGoogle gets a reference to the given bool and assigns it to the Google field.
func (o *SafeSearchConfig) SetGoogle(v bool) {
	o.Google = &v
}

// GetPixabay returns the Pixabay field value if set, zero value otherwise.
func (o *SafeSearchConfig) GetPixabay() bool {
	if o == nil || IsNil(o.Pixabay) {
		var ret bool
		return ret
	}
	return *o.Pixabay
}

// GetPixabayOk returns a tuple with the Pixabay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeSearchConfig) GetPixabayOk() (*bool, bool) {
	if o == nil || IsNil(o.Pixabay) {
		return nil, false
	}
	return o.Pixabay, true
}

// HasPixabay returns a boolean if a field has been set.
func (o *SafeSearchConfig) HasPixabay() bool {
	if o != nil && !IsNil(o.Pixabay) {
		return true
	}

	return false
}

// SetPixabay gets a reference to the given bool and assigns it to the Pixabay field.
func (o *SafeSearchConfig) SetPixabay(v bool) {
	o.Pixabay = &v
}

// GetYandex returns the Yandex field value if set, zero value otherwise.
func (o *SafeSearchConfig) GetYandex() bool {
	if o == nil || IsNil(o.Yandex) {
		var ret bool
		return ret
	}
	return *o.Yandex
}

// GetYandexOk returns a tuple with the Yandex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeSearchConfig) GetYandexOk() (*bool, bool) {
	if o == nil || IsNil(o.Yandex) {
		return nil, false
	}
	return o.Yandex, true
}

// HasYandex returns a boolean if a field has been set.
func (o *SafeSearchConfig) HasYandex() bool {
	if o != nil && !IsNil(o.Yandex) {
		return true
	}

	return false
}

// SetYandex gets a reference to the given bool and assigns it to the Yandex field.
func (o *SafeSearchConfig) SetYandex(v bool) {
	o.Yandex = &v
}

// GetYoutube returns the Youtube field value if set, zero value otherwise.
func (o *SafeSearchConfig) GetYoutube() bool {
	if o == nil || IsNil(o.Youtube) {
		var ret bool
		return ret
	}
	return *o.Youtube
}

// GetYoutubeOk returns a tuple with the Youtube field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeSearchConfig) GetYoutubeOk() (*bool, bool) {
	if o == nil || IsNil(o.Youtube) {
		return nil, false
	}
	return o.Youtube, true
}

// HasYoutube returns a boolean if a field has been set.
func (o *SafeSearchConfig) HasYoutube() bool {
	if o != nil && !IsNil(o.Youtube) {
		return true
	}

	return false
}

// SetYoutube gets a reference to the given bool and assigns it to the Youtube field.
func (o *SafeSearchConfig) SetYoutube(v bool) {
	o.Youtube = &v
}

func (o SafeSearchConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SafeSearchConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Bing) {
		toSerialize["bing"] = o.Bing
	}
	if !IsNil(o.Duckduckgo) {
		toSerialize["duckduckgo"] = o.Duckduckgo
	}
	if !IsNil(o.Ecosia) {
		toSerialize["ecosia"] = o.Ecosia
	}
	if !IsNil(o.Google) {
		toSerialize["google"] = o.Google
	}
	if !IsNil(o.Pixabay) {
		toSerialize["pixabay"] = o.Pixabay
	}
	if !IsNil(o.Yandex) {
		toSerialize["yandex"] = o.Yandex
	}
	if !IsNil(o.Youtube) {
		toSerialize["youtube"] = o.Youtube
	}
	return toSerialize, nil
}

type NullableSafeSearchConfig struct {
	value *SafeSearchConfig
	isSet bool
}

func (v NullableSafeSearchConfig) Get() *SafeSearchConfig {
	return v.value
}

func (v *NullableSafeSearchConfig) Set(val *SafeSearchConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSafeSearchConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSafeSearchConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSafeSearchConfig(val *SafeSearchConfig) *NullableSafeSearchConfig {
	return &NullableSafeSearchConfig{value: val, isSet: true}
}

func (v NullableSafeSearchConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSafeSearchConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


