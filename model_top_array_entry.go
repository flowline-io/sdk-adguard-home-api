/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TopArrayEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TopArrayEntry{}

// TopArrayEntry Represent the number of hits or time duration per key (url, domain, or client IP). 
type TopArrayEntry struct {
	DomainOrIp *float32 `json:"domain_or_ip,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TopArrayEntry TopArrayEntry

// NewTopArrayEntry instantiates a new TopArrayEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTopArrayEntry() *TopArrayEntry {
	this := TopArrayEntry{}
	return &this
}

// NewTopArrayEntryWithDefaults instantiates a new TopArrayEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTopArrayEntryWithDefaults() *TopArrayEntry {
	this := TopArrayEntry{}
	return &this
}

// GetDomainOrIp returns the DomainOrIp field value if set, zero value otherwise.
func (o *TopArrayEntry) GetDomainOrIp() float32 {
	if o == nil || IsNil(o.DomainOrIp) {
		var ret float32
		return ret
	}
	return *o.DomainOrIp
}

// GetDomainOrIpOk returns a tuple with the DomainOrIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopArrayEntry) GetDomainOrIpOk() (*float32, bool) {
	if o == nil || IsNil(o.DomainOrIp) {
		return nil, false
	}
	return o.DomainOrIp, true
}

// HasDomainOrIp returns a boolean if a field has been set.
func (o *TopArrayEntry) HasDomainOrIp() bool {
	if o != nil && !IsNil(o.DomainOrIp) {
		return true
	}

	return false
}

// SetDomainOrIp gets a reference to the given float32 and assigns it to the DomainOrIp field.
func (o *TopArrayEntry) SetDomainOrIp(v float32) {
	o.DomainOrIp = &v
}

func (o TopArrayEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TopArrayEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DomainOrIp) {
		toSerialize["domain_or_ip"] = o.DomainOrIp
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TopArrayEntry) UnmarshalJSON(data []byte) (err error) {
	varTopArrayEntry := _TopArrayEntry{}

	err = json.Unmarshal(data, &varTopArrayEntry)

	if err != nil {
		return err
	}

	*o = TopArrayEntry(varTopArrayEntry)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "domain_or_ip")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTopArrayEntry struct {
	value *TopArrayEntry
	isSet bool
}

func (v NullableTopArrayEntry) Get() *TopArrayEntry {
	return v.value
}

func (v *NullableTopArrayEntry) Set(val *TopArrayEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableTopArrayEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableTopArrayEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTopArrayEntry(val *TopArrayEntry) *NullableTopArrayEntry {
	return &NullableTopArrayEntry{value: val, isSet: true}
}

func (v NullableTopArrayEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTopArrayEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


