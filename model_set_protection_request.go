/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SetProtectionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetProtectionRequest{}

// SetProtectionRequest Protection state configuration
type SetProtectionRequest struct {
	Enabled bool `json:"enabled"`
	// Duration of a pause, in milliseconds.  Enabled should be false.
	Duration *int32 `json:"duration,omitempty"`
}

type _SetProtectionRequest SetProtectionRequest

// NewSetProtectionRequest instantiates a new SetProtectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetProtectionRequest(enabled bool) *SetProtectionRequest {
	this := SetProtectionRequest{}
	this.Enabled = enabled
	return &this
}

// NewSetProtectionRequestWithDefaults instantiates a new SetProtectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetProtectionRequestWithDefaults() *SetProtectionRequest {
	this := SetProtectionRequest{}
	return &this
}

// GetEnabled returns the Enabled field value
func (o *SetProtectionRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *SetProtectionRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *SetProtectionRequest) SetEnabled(v bool) {
	o.Enabled = v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *SetProtectionRequest) GetDuration() int32 {
	if o == nil || IsNil(o.Duration) {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetProtectionRequest) GetDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *SetProtectionRequest) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *SetProtectionRequest) SetDuration(v int32) {
	o.Duration = &v
}

func (o SetProtectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetProtectionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	return toSerialize, nil
}

func (o *SetProtectionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"enabled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSetProtectionRequest := _SetProtectionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSetProtectionRequest)

	if err != nil {
		return err
	}

	*o = SetProtectionRequest(varSetProtectionRequest)

	return err
}

type NullableSetProtectionRequest struct {
	value *SetProtectionRequest
	isSet bool
}

func (v NullableSetProtectionRequest) Get() *SetProtectionRequest {
	return v.value
}

func (v *NullableSetProtectionRequest) Set(val *SetProtectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetProtectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetProtectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetProtectionRequest(val *SetProtectionRequest) *NullableSetProtectionRequest {
	return &NullableSetProtectionRequest{value: val, isSet: true}
}

func (v NullableSetProtectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetProtectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


